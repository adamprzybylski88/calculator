.make-colortones(@cont, @color_list) {
	@cl: length(@color_list);

	.colors-loop(@i) when (@i > 0) {
		@each_pos: extract(@color_list, @i);

		@name: extract(@each_pos, 1); 				// color name
		@p_hash: extract(@each_pos, 2); 			// text color hash
		@link_hash: extract(@each_pos, 3); 			// link color
		@link_hash_hover: extract(@each_pos, 4); 	// link color:hover
		@li_hash: extract(@each_pos, 5); 			// li text color
		@tick_name: extract(@each_pos, 6); 			// li tick name
		@dot_hash: extract(@each_pos, 7); 			// li dot color
		@btn_bg: extract(@each_pos, 8); 			// btn background-color
		@btn_bg_hover: extract(@each_pos, 9); 		// btn background-color:hover
		@btn_text: extract(@each_pos, 10); 			// btn text-color


		// construction
		@{cont}.colortone_@{name} {

			.cont-box {
				p {
					color: @p_hash;

					a {
						color: @link_hash;

						&:hover {
							color: @link_hash_hover;
						}
					}
				}

 				ul {
					> li {
						color: @li_hash;

						a {
							color: @link_hash;

							&:hover {
								color: @link_hash_hover;
							}
						}

						&:before {
							background-color: @dot_hash;
						}
					}

					&.tick {
						> li {

							&:before {
								background-image: url(~'/img/tick-table_@{tick_name}.svgz');
							}
						}
					}
				}
			}

			.btn {
				background-color: @btn_bg;
				color: @btn_text;

				&:hover {
					background-color: @btn_bg_hover;
				}
			}
		}

		// end construction
		.colors-loop(@i - 1);
	}

	.colors-loop(0) {}
	.colors-loop(@cl);
}

.make-colortone-parts(@cont, @colors_list) {
	@col: length(@cont);

	.cont-loop(@a) when (@a > 0) {
		@s_cont: extract(@cont, @a);

		// construction
		@{s_cont} {
			ul {
				&.tick {
					> li {
						&:before {
							background-color: @transparent;
						}
					}
				}
			}

			&[class*='color_'] {
				h1,
				h2,
				h3,
				p {
					color: @white;
				}

				p {
					a {
						color: @white;

						&:hover {
							color: @white;
						}
					}
				}
			}

			&[class*='color_pale'],
			&[class*='color_white'] {
				h1,
				h2,
				h3 {
					color: @base-h;
				}

				p {
					color: @base-p;

					a {
						color: @base-a;

						&:hover {
							color: @base-a-hover;
						}
					}
				}
			}

			&[class*='color_dark'],
			&[class*='color_black'],
			&[class*='color_darkest'] {
				p {
					color: @base-p-light;

					span {
						color: @white;
					}

					a {
						color: @white;

						&:hover {
							color: @white;
						}
					}
				}
			}

			&[class*='color_dark'] {
				ol,
				ul {
					li {
						color: @white;
					}
				}
			}

			&[class*='color_black'],
			&[class*='color_darkest'] {
				ol,
				ul {
					li {
						color: darken(@white, 10%);
					}
				}
			}
		}

		.make-colortones(@s_cont, @colors_list);

		// end construction
		.cont-loop(@a - 1);
	}

	.cont-loop(0) {}
	.cont-loop(@col);
}
