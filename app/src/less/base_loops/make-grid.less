.generate-order(@n, @nm:1) when (@nm =< @n) {
	.order-@{nm} {
		.flex-order(@nm);
	}

	.media-order-screen(@devices, @devices-short) {
		.iter(length(@devices));

		.iter(@i) when (@i > 0) {
			.iter(@i - 1);

			@dev: extract(@devices, @i);
			@shrt: extract(@devices-short, @i);

			@media screen and (max-width: @dev) {
				.order-@{shrt}-@{nm} {
					.flex-order(@nm);
				}
			}
		}
	}
	.media-order-screen(@devices, @devices-short);

	.generate-order(@n, (@nm + 1));
}

.media-screen(@devices, @devices-short) {
	.iter(length(@devices));

	.iter(@i) when (@i > 0) {
		.iter(@i - 1);

		@dev: extract(@devices, @i);
		@shrt: extract(@devices-short, @i);

		.@{shrt} {
			max-width: @dev + @pd + @pd;
			width: 100%;
			margin-left: auto;
			margin-right: auto;
		}
	}
}

.and-media-screen(@devices, @devices-short) {
	.iter(length(@devices));

	.iter(@i) when (@i > 0) {
		.iter(@i - 1);

		@dev: extract(@devices, @i);
		@shrt: extract(@devices-short, @i);

		&.@{shrt} {
			max-width: @dev + @pd + @pd;
		}
	}
}

.generate-columns(@colw, @nm:1) when (@nm =< @colw) {

	// columns
	@col-math: (100% / @colw) * @nm;

	/* BOX COLUMNS */
	.turbobox {
		> .tx-@{nm} {
			width: @col-math - 3%;
			max-width: @col-math - 3%;
		}

		> .ml-@{nm} {
			margin-left: @col-math + 1.5%;
		}

		> .mr-@{nm} {
			margin-right: @col-math + 1.5%;
		}

		> .mml-@{nm} {
			margin-left: -@col-math - 1.5%; // 100% is buggy on resizing
		}

		> .mmr-@{nm} {
			margin-right: -@col-math - 1.5%; // 100% is buggy on resizing
		}

		.media-columns-screen(@devices, @devices-short) {
			.iter(length(@devices));

			.iter(@i) when (@i > 0) {
				.iter(@i - 1);

				@dev: extract(@devices, @i);
				@shrt: extract(@devices-short, @i);

				@media screen and (max-width: @dev) {
					> .tx-@{shrt}-@{nm} {
						width: @col-math - 3% !important;
						max-width: @col-math - 3% !important;
					}

					> .ml-@{shrt}-0 {
						margin-left: 1.5%;
					}

					> .mr-@{shrt}-0 {
						margin-right: 1.5%;
					}

					> .ml-@{shrt}-@{nm} {
						margin-left: @col-math + 1.5%;
					}

					> .mr-@{shrt}-@{nm} {
						margin-right: @col-math + 1.5%;
					}

					> .mml-@{shrt}-0 {
						margin-left: 1.5%;
					}

					> .mmr-@{shrt}-0 {
						margin-right: 1.5%;
					}

					> .mml-@{shrt}-@{nm} {
						margin-left: -@col-math - 1.5%;
					}

					> .mmr-@{shrt}-@{nm} {
						margin-right: -@col-math - 1.5%;
					}
				}
			}
		}
		.media-columns-screen(@devices, @devices-short);

	}

	/* TABLE COLUMNS */
	.turbotable {
		> .tx-@{nm} {
			width: @col-math;
			max-width: @col-math;
		}

		> .ml-@{nm} {
			margin-left: @col-math;
		}

		> .mr-@{nm} {
			margin-right: @col-math;
		}

		> .mml-@{nm} {
			margin-left: -@col-math;
		}

		> .mmr-@{nm} {
			margin-right: -@col-math;
		}

		.media-table-columns-screen(@devices, @devices-short) {
			.iter(length(@devices));

			.iter(@i) when (@i > 0) {
				.iter(@i - 1);

				@dev: extract(@devices, @i);
				@shrt: extract(@devices-short, @i);

				@media screen and (max-width: @dev) {
					> .tx-@{shrt}-@{nm} {
						width: @col-math !important;
						max-width: @col-math !important;
					}

					> .ml-@{shrt}-0 {
						margin-left: 0;
					}

					> .mr-@{shrt}-0 {
						margin-right: 0;
					}

					> .ml-@{shrt}-@{nm} {
						margin-left: @col-math;
					}

					> .mr-@{shrt}-@{nm} {
						margin-right: @col-math;
					}

					> .mml-@{shrt}-0 {
						margin-left: 0;
					}

					> .mmr-@{shrt}-0 {
						margin-right: 0;
					}

					> .mml-@{shrt}-@{nm} {
						margin-left: -@col-math;
					}

					> .mmr-@{shrt}-@{nm} {
						margin-right: -@col-math;
					}
				}
			}
		}
		.media-table-columns-screen(@devices, @devices-short);

	}

	.generate-columns(@colw, (@nm + 1));
}
